name: Monkeytype Daily Data Fetch

on:
  schedule:
    - cron: "0 5 * * *" # Runs daily at midnight EST
  workflow_dispatch: # Allows manual triggering of the workflow

jobs:
  fetch-and-deploy:
    runs-on: ubuntu-latest
    env:
      OUTPUT_FILE: "monkeytype.json"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 1

      - name: Fetch data from Monkeytype
        run: |
          qwerty_response=$(curl -s -w "%{http_code}" -o qwerty_data.json "https://api.monkeytype.com/users/wwezGtenkPeTFJTioEK0KZcXWXq1/profile?isUid")
          canary_response=$(curl -s -w "%{http_code}" -o canary_data.json "https://api.monkeytype.com/users/129CxSj68DhL8PbgNBxazC8oOa73/profile?isUid")

          if [[ "$qwerty_response" != "200" || "$canary_response" != "200" ]]; then
            echo "Error: Failed to fetch Monkeytype data!"
            exit 1
          fi

          qwerty_data=$(jq -c '{stats: .data.typingStats, bests: .data.personalBests}' qwerty_data.json)
          canary_data=$(jq -c '{stats: .data.typingStats, bests: .data.personalBests}' canary_data.json)

          echo "{\"qwerty\":$qwerty_data,\"canary\":$canary_data}" > temp_data.json

          rm qwerty_data.json canary_data.json

      - name: Check for changes
        run: |
          curl -s -o cache_data.json "https://apibayrockdev.vercel.app/$OUTPUT_FILE"

          if cmp --silent <(jq -c 'del(.updated)' cache_data.json) temp_data.json; then
            echo "No changes detected; skipping deployment."
            echo "no_changes=true" >> $GITHUB_ENV
            exit 0
          else
            echo "Changes detected; proceeding with deployment."
          fi

      - name: Update API data
        if: env.no_changes == null
        run: |
          if [ ! -f "public/endpoints.json" ]; then
            echo "Error: Failed to locate endpoints.json!"
            exit 1
          fi

          for file in $(jq -r '.files[]' public/endpoints.json); do
            if [[ "$file" == "$OUTPUT_FILE" ]]; then continue; fi
            curl -s "https://apibayrockdev.vercel.app/$file" -o "public/$file"
          done

          jq -c --argjson timestamp "$(date +%s)" '. + {updated:$timestamp}' temp_data.json > "./public/$OUTPUT_FILE"

      - name: Deploy to Vercel
        if: env.no_changes == null
        run: vercel deploy --prod --yes --scope=${{ secrets.VERCEL_ORG_ID }} --token=${{ secrets.VERCEL_TOKEN }}
